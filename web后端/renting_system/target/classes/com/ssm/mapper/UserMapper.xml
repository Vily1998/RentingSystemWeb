<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
<!--     
    namespace：必须与对应的接口全类名一致  UserMapper.java  
    id ：必须与对应接口的某个对应的方法名一致即必须要和UserMapper.java接口中的方法同名。  
 -->    
 <mapper namespace="com.ssm.mapper.UserMapper">  

      <!-- 新增 -->
      <insert id="saveUser" parameterType="User"  >
         insert into t_user(user_name,user_age,user_password) values (#{username},#{age},#{password})
      </insert>


      <!-- 删除 -->
      <delete id="deleteUser" parameterType="int">
          delete from t_user where user_id=#{id}    
      </delete>
      
      
       <!-- 根据最大id -->
      <select id="findMaxUserID"  resultType="int">
         select max(user_id) 
         from t_user     
      </select>

      <!-- 根据name查找单个用户 -->
      <select id="findUserByUserName" parameterType="String" resultType="User">
         select user_id user_id,user_name user_name,password password,user_type user_type,real_name real_name,certificate_type certificate_type,certificate_num certificate_num,mobile_num mobile_num,user_level user_level,register_city register_city,register_time register_time,modify_time modify_time  
         from t_user 
         where user_name=#{user_name}    
      </select>
      
      <!-- 根据id查找单个用户 -->
      <select id="findUserByUserID" parameterType="int" resultType="User">
         select user_id user_id,user_name user_name,password password,user_type user_type,real_name real_name,certificate_type certificate_type,certificate_num certificate_num,mobile_num mobile_num,user_level user_level,register_city register_city,register_time register_time,modify_time modify_time  
         from t_user 
         where user_id=#{user_id}    
      </select>
      
      <!-- 新增 -->
      <insert id="addFee" parameterType="int"  >
         insert into t_total_fee(user_id,total_fee) 
         values
          (#{user_id},0)
      </insert>
      
      <insert id="addUser" parameterType="User"  >
         insert into t_user(user_id,user_name,password,user_type,real_name,certificate_type,certificate_num,mobile_num,user_level,register_city,register_time,modify_time) 
         values 
         (#{user_id},#{user_name},#{password},#{user_type},#{real_name},#{certificate_type},#{certificate_num},#{mobile_num},#{user_level},#{register_city},#{register_time},#{modify_time})
      </insert>
      
      <!-- 修改 -->
      <update id="updateUser">
        update t_user 
        set password=#{new_password},mobile_num=#{new_mobile_num} 
        where user_name=#{user_name}
      </update>
      
      

      <!-- 查询所有 -->
       <select id="AllUserInfo" resultType="User">    
         select *
         from t_user 
         where user_type=1     
      </select>  
      
      <!-- 根据id查找单个用户 -->
      <select id="findLevelByUserID" parameterType="int" resultType="int">
         select user_level
         from t_user 
         where user_id=#{user_id}    
      </select>
 </mapper>  